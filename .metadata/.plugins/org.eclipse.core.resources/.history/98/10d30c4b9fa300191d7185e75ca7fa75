/*
 데이터타입
   기본 자료형 : 기본 라이브러리에서 제공되늰 데이터타입. 정수형, 문자형, 실수형, 논리형
   * 정수형 : byte, short, int, long
    * 문자형 : char
             * 실수형 : float, double
             * 논리형 : boolean
             */
package chapter2;

public class A02_char {

	public static void main(String[] args) {
		byte b_num1 = 127;
		System.out.println(b_num1);
//128은 안들어감. 0~127까지 가능하기 때문에.
		//byte의 유효숫자 범위는 -2^7 ~ 2^7-1

		short s_num2 = -32767;
		System.out.println(s_num2);
		System.out.println(Short.MIN_VALUE);
		//short의 유효숫자 범위는 -2^15 ~ 2^15-1
		// : -32768~32767
		//System.out.println(Short.MIN_VALUE); 최소 숫자확인

		//int의 유효숫자 범위는 -2^31~2^31-1
		//int가 표현 될 수 있는 가장 작은 숫자가 -2147483648
		// : -2,147,483,648~2,147,483,647
		/*일반적으로 int를 쓰긴 함. 
		 만약 천문우주쪽의 응용분야라고 하면 long을 써야함*/
		int i_num3 = -2147483648;
		System.out.println(i_num3);
		System.out.println(Integer.MIN_VALUE);
		

		// long의 유효숫자 범위 -2^63~2^63-1
		System.out.println(Long.MIN_VALUE);
		System.out.println(Long.MAX_VALUE);
		//max는 최대숫자 확인

		/*//이렇게 혼합되어져서 연산처리 가능
		short sval=1;
		int ival=1;
		
		System.out.println(sval+ival);
		//좀더 유연한 범위 쪽으로 값이 바뀌어짐*/
		
		
		short sval=1;
		int ival=1;
		float fval=1.0f; //f를 적어줘야만 변수선언을 제대로 할 수있음
		System.out.println("short형과 int형의 혼합연산 : "+sval+ival);
		System.out.println(ival+fval);
		
	}

}
