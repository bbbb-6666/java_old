/*
 데이터타입
   기본 자료형 : 기본 라이브러리에서 제공되늰 데이터타입. 정수형, 문자형, 실수형, 논리형
   * 정수형 : byte, short, int, long
    * 문자형 : char
             * 실수형 : float, double
             * 논리형 : boolean
             */
package chapter2;

public class A02_char {

	public static void main(String[] args) {
		byte b_num1 = 127;
		System.out.println(b_num1);
//128은 안들어감. 0~127까지 가능하기 때문에.
		//byte의 유효숫자 범위는 -2^7 ~ 2^7-1

		short s_num2 = -32767;
		System.out.println(s_num2);
		System.out.println(Short.MIN_VALUE);
		//short의 유효숫자 범위는 -2^15 ~ 2^15-1
		// : -32768~32767
		//System.out.println(Short.MIN_VALUE); 최소 숫자확인

		//int의 유효숫자 범위는 -2^31~2^31-1
		//int가 표현 될 수 있는 가장 작은 숫자가 -2147483648
		// : -2,147,483,648~2,147,483,647
		/*일반적으로 int를 쓰긴 함. 
		 만약 천문우주쪽의 응용분야라고 하면 long을 써야함*/
		int i_num3 = -2147483648;
		System.out.println(i_num3);
		System.out.println(Integer.MIN_VALUE);
		

		// long의 유효숫자 범위 -2^63~2^63-1
		System.out.println(Long.MIN_VALUE);
		System.out.println(Long.MAX_VALUE);
		//max는 최대숫자 확인

		
		
		
		
		/*//이렇게 혼합되어져서 연산처리 가능
		short sval=1;
		int ival=1;
		
		System.out.println(sval+ival);
		//이렇게 하면 int에 맞춰서 연산이 됨. 좀더 유연한 범위 쪽으로 값이 바뀌어짐*/
		
		
		short sval=1;
		int ival=1;
		double fval=1.0f; //f를 적어줘야만 변수선언을 제대로 할 수있음
		System.out.println("short형과 int형의 혼합연산 : "+sval+ival);
		System.out.println(ival+fval);
		/*System.out.println("short형과 int형의 혼합연산 : "+ (sval+ival));
		 * 안에 괄호를 쳐주면 거기 먼저부터 계산을 해줌, 표현이 범위가 더 큰 쪽으로 바뀜.
		 */
		/* ***정리
		 * 서로 다른 데이터 타입의 데이터를 혼합 연산할때
		 * 연산결과는 범위가 큰 쪽으로 변환되어 처리한다. 
		 */
		
		
		
		//문자형 데이터에 대해서 얘기
		//캐릭터타입으로다가 변수 전환
		/*
		char ch1='A';
		System.out.println(ch1);
		*/
		//ch1 변수를 출력 system웅앵웅은 출력문

		char ch1='A';
		System.out.println(ch1);
		System.out.println((int)ch1); 
		/* 정수형과 실수형을 섞어서 계산하면 실수형이 된다. 바이트타입과 인티젼타입으로 바뀐다. 조금더 큰쪽으로 자동으로 바뀐다.
		       형 변환이 자동적으로 되는 것을 묵시적 형변환inmplicit 라고 함.
		       형 변환을 강제적으로 지정할 수 있음. 그게  System.out.println((int)ch1); >> int 써놓은게 강제적 형변환 
		       그래서 65로 출력이 됨
		*/
		
		int ch2=66;                    // 정수형 변수 ch2로 선언을 했고, 그 값을 66으로 초기화를 함. 
		System.out.println(ch2);       // 그래서 출력을 함.
		System.out.println((char)ch2); // 그 숫자값 66을 강제로 형변환을 해서 캐릭터타입으로 출력해라.
		
		char ch3='가';
		System.out.println(ch3);
		System.out.println((int)ch3);
		
		
		
		
		
	}

}
